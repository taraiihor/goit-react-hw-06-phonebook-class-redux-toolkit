{"version":3,"sources":["components/redux/contacts/contacts-actions.js","components/Contact/ContactsList.js","components/Form/ContactForm.js","components/Filter/Filter.js","App.js","components/redux/contacts/contact-reducer.js","components/redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uniqueId","deleteContact","changeFilter","connect","state","contacts","filter","contact","normalize","toLowerCase","trim","includes","dispatch","onDeleteContact","map","className","onClick","ContactForm","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","find","item","alert","reset","this","type","placeholder","onChange","disabled","Component","dispadch","target","App","length","React","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"gZAGaA,EAAaC,YACxB,gBACA,SAAiBC,EAAMC,GACrB,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAMKI,EAAgBN,YAAa,mBAE7BO,EAAeP,YAAa,yBCmB1BQ,G,MAAAA,aAdS,SAAAC,GAAU,IAAD,EACHA,EAAMC,SAA1BC,EADuB,EACvBA,OAAQC,EADe,EACfA,QACVC,EAAYF,EAAOG,cAAcC,OAKvC,MAAO,CAAEL,SAJeE,EAAQD,QAAO,SAAAC,GAAO,OAC5CA,EAAQX,KAAKa,cAAcE,SAASH,UAMb,SAAAI,GAAQ,MAAK,CACtCC,gBAAiB,SAAAd,GAAE,OAAIa,EAASX,EAAcF,QAGjCI,EA/BM,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,gBAAb,OACnB,6BACGR,EAASS,KAAI,gBAAGf,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAakB,UAAU,gBAAvB,UACE,mBAAGA,UAAU,aAAb,SAA2BnB,IAC3B,mBAAGmB,UAAU,aAAb,SAA2BlB,IAC3B,wBAAQkB,UAAU,eAAeC,QAAS,kBAAMH,EAAgBd,IAAhE,oDAHOA,Y,OCJTkB,G,kNACJb,MAAQ,CACNR,KAAM,GACNC,OAAQ,I,EAGVqB,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,cAAtBxB,EADc,EACdA,KAAMyB,EADQ,EACRA,MACd,EAAKC,SAAL,eAAiB1B,EAAOyB,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBADgB,MAEG,EAAKpB,MAAtBR,EAFc,EAEdA,KAAMC,EAFQ,EAERA,OAFQ,EAGQ,EAAK4B,MAA3BlB,EAHc,EAGdA,QAASmB,EAHK,EAGLA,SAKjB,GAHqBnB,EAAQoB,MAC3B,SAAAC,GAAI,OAAIA,EAAKhC,KAAKa,gBAAkBb,EAAKa,iBAKzC,OAFAoB,MAAM,8CAAD,OAAYjC,EAAZ,0GACL,EAAKkC,QAGPJ,EAAS9B,EAAMC,GACf,EAAKiC,S,EAEPA,MAAQ,WACN,EAAKR,SAAS,CAAE1B,KAAM,GAAIC,OAAQ,M,uDAE1B,IAAD,EACkBkC,KAAK3B,MAAtBR,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAMkB,UAAU,aAAaW,SAAUK,KAAKR,aAA5C,UACE,6DAEE,uBACER,UAAU,cACViB,KAAK,OACLpC,KAAK,OACLqC,YAAY,WACZZ,MAAOzB,EACPsC,SAAUH,KAAKb,kBAGnB,+EAEE,uBACEH,UAAU,cACViB,KAAK,OACLpC,KAAK,SACLqC,YAAY,YACZZ,MAAOxB,EACPqC,SAAUH,KAAKb,kBAGnB,wBAAQc,KAAK,SAASG,SAAmB,KAATvC,GAA0B,KAAXC,EAA/C,gH,GAxDkBuC,cAsEXjC,eANS,SAAC,GAAD,MAAgC,CACtDI,QADsB,EAAGF,SAAYE,YAGZ,SAAA8B,GAAQ,MAAK,CACtCX,SAAU,SAAC9B,EAAMC,GAAP,OAAkBwC,EAAS3C,EAAWE,EAAMC,QAEzCM,CAA6Cc,GCtD7Cd,G,MAAAA,aANS,SAAAC,GAAK,MAAK,CAChCiB,MAAOjB,EAAMC,SAASC,WAEG,SAAAM,GAAQ,MAAK,CACtCsB,SAAU,SAAAf,GAAK,OAAIP,EAASV,EAAaiB,EAAMmB,OAAOjB,YAEzClB,EAjBA,SAAC,GAAD,IAAGkB,EAAH,EAAGA,MAAOa,EAAV,EAAUA,SAAV,OACb,wBAAOnB,UAAU,eAAjB,UACE,mBAAGA,UAAU,oBAAb,mGACA,uBACEA,UAAU,gBACViB,KAAK,OACLX,MAAOA,EACPa,SAAUA,WCJVK,G,6KACM,IACAhC,EAAYwB,KAAKN,MAAjBlB,QAER,OACE,sBAAKQ,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,KACER,EAAQiC,QAAU,oPACpB,cAAC,EAAD,W,GAXUC,IAAML,YAmBTjC,eAHS,SAAC,GAAD,MAAgC,CACtDI,QADsB,EAAGF,SAAYE,WAGxBJ,CAAyBoC,G,uCCjBlChC,EAAUmC,YANG,CACjB,CAAE3C,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eAEnB,mBAC1BH,GAAa,SAACU,EAAD,OAAUN,EAAV,EAAUA,QAAV,4BAA4BM,GAA5B,CAAmCN,OADtB,cAE1BG,GAAgB,SAACG,EAAD,OAAUN,EAAV,EAAUA,QAAV,OACfM,EAAME,QAAO,qBAAGP,KAAgBD,QAHP,IAMvBQ,EAASoC,YAAc,GAAD,eACzBxC,GAAe,SAACyC,EAAD,YAAM7C,YAGT8C,cAAgB,CAC7BrC,UACAD,W,iBCFIuC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAEIC,EAAgB,CACpBC,IAAK,OACLC,YACAC,UAAW,CAAC,WAERC,EAAchB,YAAgB,CAAEvC,SAAUwD,IAE1CC,EAAmBC,YAAeP,EAAeI,GAE1CI,EAAQC,YAAe,CAClCC,QAASJ,EACTK,UAAUC,EACVvB,eAEWwB,EAAYC,YAAaN,G,QCjCtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaU,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.c987301c.chunk.js","sourcesContent":["import { v4 as uniqueId } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(\r\n  'contacts/add',\r\n  function prepare(name, number) {\r\n    return {\r\n      payload: {\r\n        id: uniqueId(),\r\n        name,\r\n        number,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../redux/contacts/contacts-actions';\r\n\r\nimport './ContactsList.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className=\"item__contact\">\r\n        <p className=\"item__text\">{name}</p>\r\n        <p className=\"item__text\">{number}</p>\r\n        <button className=\"item__buttom\" onClick={() => onDeleteContact(id)}>\r\n          стерти\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, contact } = state.contacts;\r\n  const normalize = filter.toLowerCase().trim();\r\n  const visibleContacts = contact.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalize),\r\n  );\r\n\r\n  return { contacts: visibleContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../redux/contacts/contacts-actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contact, onSubmit } = this.props;\r\n\r\n    const auditContact = contact.find(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (auditContact) {\r\n      alert(`Контакт ${name} з таким ім’ям вже є.`);\r\n      this.reset();\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"item__form\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Ім’я\r\n          <input\r\n            className=\"item__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Jony Dep\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Телефон\r\n          <input\r\n            className=\"item__input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={name === '' || number === ''}>\r\n          Зберегти контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { contact } }) => ({\r\n  contact,\r\n});\r\nconst mapDispatchToProps = dispadch => ({\r\n  onSubmit: (name, number) => dispadch(addContact(name, number)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport { changeFilter } from '../redux/contacts/contacts-actions';\r\n\r\nimport './Filter.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"item__filter\">\r\n    <p className=\"item__text-filter\">Пошук контактів</p>\r\n    <input\r\n      className=\"item__element\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changeFilter(event.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport ContactsList from './components/Contact/';\nimport ContactForm from './components/Form/';\nimport Filter from './components/Filter/';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  render() {\n    const { contact } = this.props;\n\n    return (\n      <div className=\"Containet\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {!contact.length && <div>Немає жодного контакту, додайте контакт</div>}\n        <ContactsList />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts: { contact } }) => ({\n  contact,\n});\nexport default connect(mapStateToProps)(App);\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\nconst testContac = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nconst contact = createReducer(testContac, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contact,\r\n  filter,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from '../redux/contacts/contact-reducer';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './components/redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}